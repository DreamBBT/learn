eBPF是linux系统上的一个便捷的工具,可以作为一个轻量级的小型虚拟机挂载在linux内核上以完成各种包检测和包处理工作.

通常使用c语言编辑其原码,然后编译为数据流(?)导入内核中对应的挂载位置进行处理工作

这里出现了两步分工:挂载+工作,所以其代码也有两部分:user端的代码+kernel端的代码

前者负责数据的处理和挂载,后者负责数据的收集和空间的开辟(当然二者的工作内容不绝对).

因为其kernel端搭载在内核上,所以具有其独特的/严格的语法结构和演讲性:

具体体现在数据量/代码量的限制上,前者限制了空间的开辟(数据的大小有限制),后者限制了循环的使用(for和while啥的).

也是正因为如此,获得了轻量级和高效率的优点,能将很多需要复杂处理的问题简单化,同时因为挂载在内核上,所以其能在很低的层次就发现问题所在,适合信息安全的开发和处理

eBPF具有其独特的数据结构----MAP,

Map并不是存储在外部的，而是存储在内核中开辟出来的虚拟机中的，user端直接使用没有定义的map数据实际上是在kernel段进行的获得和调用。
